{"version":3,"sources":["components/bus/Bus.js"],"names":["Bus","props","useState","loadingSave","setLoadingSave","loadingDestroy","setLoadingDestroy","description","layout","seats","bus","setBus","error","setError","message","setMessage","setSeats","history","useHistory","id","match","params","config","headers","localStorage","getItem","useEffect","a","api","get","res","data","length","errorHandled","errorApi","forbidden","push","general","fetchData","handleAddSeat","seatsAux","handleSave","put","post","handleDestroy","delete","Fragment","className","role","style","display","htmlFor","type","maxLength","value","onChange","e","target","onClick","Array","from","i","j","parseInt","disabled","aria-hidden"],"mappings":"8MA4MeA,UArMf,SAAaC,GAAQ,IAAD,EACoBC,oBAAS,GAD7B,mBACXC,EADW,KACEC,EADF,OAE0BF,oBAAS,GAFnC,mBAEXG,EAFW,KAEKC,EAFL,OAGIJ,mBAAS,CAACK,YAAa,GAAIC,OAAQ,CAACC,MAAO,MAH/C,mBAGXC,EAHW,KAGNC,EAHM,OAIQT,mBAAS,IAJjB,mBAIXU,EAJW,KAIJC,EAJI,OAKYX,mBAAS,IALrB,mBAKXY,EALW,KAKFC,EALE,OAMQb,mBAAS,GANjB,mBAMXO,EANW,KAMJO,EANI,KAQdC,EAAUC,cAENC,EAAOlB,EAAMmB,MAAMC,OAAnBF,GAEFG,EAAS,CAAEC,QAAS,CACxB,iBAAmBC,aAAaC,QAAQ,WAG1CC,qBAAU,WAoBG,SAAPP,GAnBW,uCAAG,8BAAAQ,EAAA,+EAEIC,IAAIC,IAAJ,iBAAkBV,GAClC,CAAEI,QAAS,CACT,iBAAmBC,aAAaC,QAAQ,YAJ9B,OAERK,EAFQ,OAMdnB,EAAOmB,EAAIC,MACXf,EAASc,EAAIC,KAAKvB,OAAOC,MAAMuB,QAPjB,iDASRC,EAAeC,YAAS,EAAD,KACZC,UACflB,EAAQmB,KAAK,KAETH,EAAaI,SACftB,EAAWkB,EAAarB,OAdd,yDAAH,oDAoBb0B,KAED,CAACnB,EAAIF,IAER,IAAMsB,EAAa,uCAAG,4BAAAZ,EAAA,sDACpBX,EAASP,EAAQ,IAEb+B,EAAW9B,EAAIF,OAAOC,OACjB2B,KAAK,GAEdzB,EAAO,2BAAKD,GAAN,IACJF,OAAQ,CAACC,MAAO+B,MAPE,2CAAH,qDAWbC,EAAU,uCAAG,4BAAAd,EAAA,yDACjBvB,GAAe,GACfS,EAAS,IAFQ,SAKR,SAAPM,EALe,gCAMLS,IAAIc,IAAJ,iBAAkBvB,GAAMT,EAAKY,GANxB,+CAOLM,IAAIe,KAAK,SAAUjC,EAAKY,GAPnB,QASfL,EAAQmB,KAAK,WATE,kDAWfhC,GAAe,IAET6B,EAAeC,YAAS,EAAD,KACZG,QACftB,EAAWkB,EAAarB,OAExBC,EAASoB,EAAarB,OAjBT,0DAAH,qDAsBVgC,EAAa,uCAAG,4BAAAjB,EAAA,6DACpBrB,GAAkB,GADE,kBAIZsB,IAAIiB,OAAJ,iBAAqB1B,GAAMG,GAJf,OAKlBL,EAAQmB,KAAK,WALK,iDAOZH,EAAeC,YAAS,EAAD,KACZG,QACftB,EAAWkB,EAAarB,OAExBC,EAASoB,EAAarB,OAXN,QAepBR,GAAe,GAfK,yDAAH,qDAkBnB,OACE,eAAC,IAAM0C,SAAP,WACE,cAAC,IAAD,IACA,qBAAKC,UAAU,kBAAf,SACE,sBAAKA,UAAU,6CAAf,UACE,cAAC,IAAD,IAEA,uDAEA,uBAAMA,UAAU,oBAAhB,UACE,qBAAKA,UAAU,iCAAiCC,KAAK,QAChDC,MAAOnC,EAAU,CAAEoC,QAAS,SAAW,CAAEA,QAAU,QADxD,SAEGpC,IAGH,sBAAKiC,UAAU,YAAf,UACE,uBAAOI,QAAQ,cAAcJ,UAAU,aAAvC,6BACA,uBAAOK,KAAK,OAAOL,UAAS,uBAAkBnC,EAAML,YAAc,aAAe,IAAMY,GAAG,cAAckC,UAAU,MAChHC,MAAO5C,EAAIH,aAAe,GAC1BgD,SAAU,SAAAC,GACR7C,EAAO,2BAAKD,GAAN,IACJH,YAAaiD,EAAEC,OAAOH,YAI5B,qBAAKnC,GAAG,iBACN4B,UAAU,mBACVE,MAAOrC,EAAML,YAAc,CAAE2C,QAAS,UAAa,CAAEA,QAAS,QAFhE,SAGGtC,EAAML,iBAIX,sBAAKwC,UAAU,WAAf,UACE,uBAAOI,QAAQ,SAASJ,UAAU,aAAlC,oBACA,uBACA,wBAAQK,KAAK,SACLL,UAAU,kBACVW,QAASnB,EAFjB,mCAOF,qBAAKQ,UAAU,oBAAf,SACE,sBAAKA,UAAU,MAAf,UACA,uBAAOI,QAAQ,SAASJ,UAAU,aAAlC,+CACGY,MAAMC,KAAK,CAAC5B,OAAQvB,IAAQ,SAACoD,EAAGC,GAC/B,OACE,qBAAaf,UAAU,aAAvB,SACE,uBAAOK,KAAK,SAASL,UAAU,eAAeM,UAAU,IAChDC,MAAO5C,EAAIF,OAAOC,MAAMqD,IAAM,GAC9BP,SAAU,SAAAC,GACR,IAAIhB,EAAW9B,EAAIF,OAAOC,MAC1B+B,EAASsB,GAAKC,SAASP,EAAEC,OAAOH,OAChC3C,EAAO,2BAAKD,GAAN,IACJF,OAAQ,CAACC,MAAO+B,UAPpBsB,cAkBpB,sBAAKf,UAAU,2BAAf,UACE,yBAAQK,KAAK,SACLL,UAAU,kBACVW,QAASjB,EACTuB,SAAU7D,EAHlB,UAIE,sBAAM4C,UAAU,wCACVC,KAAK,SACLiB,cAAY,OACZhB,MAAO9C,EAAc,CAAE+C,QAAS,gBAAkB,CAAEA,QAAU,UAPtE,YAYA,yBAAQE,KAAK,SACLL,UAAU,kBACVE,MAAc,SAAP9B,EAAgB,CAAE+B,QAAS,gBAAkB,CAAEA,QAAU,QAChEQ,QAASd,EACToB,SAAU3D,EAJlB,UAKE,sBAAM0C,UAAU,wCACVC,KAAK,SACLiB,cAAY,OACZhB,MAAO5C,EAAiB,CAAE6C,QAAS,gBAAkB,CAAEA,QAAU,UARzE,aAaA,wBAAQE,KAAK,SACLL,UAAU,kCACVW,QAAS,WACPzC,EAAQmB,KAAK,YAHvB","file":"static/js/13.75786e24.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport NavHeader from '../nav/NavHeader'\r\nimport Sidebar from '../nav/Sidebar'\r\nimport { api } from '../../config/api'\r\nimport { errorApi } from '../../config/handleErrors'\r\n\r\nfunction Bus(props) {\r\n  const [loadingSave, setLoadingSave] = useState(false)\r\n  const [loadingDestroy, setLoadingDestroy] = useState(false)\r\n  const [bus, setBus] = useState({description: '', layout: {seats: []}})\r\n  const [error, setError] = useState({})\r\n  const [message, setMessage] = useState('')\r\n  const [seats, setSeats] = useState(4)\r\n\r\n  let history = useHistory()\r\n\r\n  const { id } = props.match.params\r\n\r\n  const config = { headers :{\r\n    'x-access-token' : localStorage.getItem('token')\r\n  }}\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await api.get(`/buses/${id}`, \r\n          { headers :{\r\n            'x-access-token' : localStorage.getItem('token')\r\n          }})\r\n        setBus(res.data)\r\n        setSeats(res.data.layout.seats.length)\r\n      } catch (error) {\r\n        const errorHandled = errorApi(error)\r\n        if (errorHandled.forbidden) {\r\n          history.push('/')\r\n        } else {\r\n          if (errorHandled.general) {\r\n            setMessage(errorHandled.error)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (id !== 'novo') {\r\n      fetchData()\r\n    }\r\n  }, [id, history])\r\n\r\n  const handleAddSeat = async () => {\r\n    setSeats(seats + 1)\r\n\r\n    let seatsAux = bus.layout.seats\r\n    seatsAux.push(0)\r\n\r\n    setBus({ ...bus,\r\n      layout: {seats: seatsAux}\r\n    })\r\n  }\r\n\r\n  const handleSave = async () => {\r\n    setLoadingSave(true)\r\n    setError({})\r\n    \r\n    try {\r\n      id !== 'novo' \r\n        ? await api.put(`/buses/${id}`, bus, config) \r\n        : await api.post('/buses', bus, config)\r\n\r\n      history.push('/onibus')\r\n    } catch (error) {\r\n      setLoadingSave(false)\r\n\r\n      const errorHandled = errorApi(error)\r\n      if (errorHandled.general) {\r\n        setMessage(errorHandled.error)\r\n      } else {\r\n        setError(errorHandled.error)\r\n      }\r\n    }    \r\n  }\r\n\r\n  const handleDestroy = async () => {\r\n    setLoadingDestroy(true)\r\n    \r\n    try {\r\n      await api.delete(`/buses/${id}`, config)\r\n      history.push('/onibus')\r\n    } catch (error) {\r\n      const errorHandled = errorApi(error)\r\n      if (errorHandled.general) {\r\n        setMessage(errorHandled.error)\r\n      } else {\r\n        setError(errorHandled.error)\r\n      }\r\n    }\r\n\r\n    setLoadingSave(false)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavHeader />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"mt-4 col-md-9 ms-sm-auto col-lg-10 px-md-2\">\r\n          <Sidebar />\r\n\r\n          <h5>Cadastro de ônibus</h5>\r\n\r\n          <form className=\"row g-3 mt-1 mb-4\">\r\n            <div className='alert text-center alert-danger' role=\"alert\"\r\n                 style={message ? { display: 'block'} : { display : 'none' }}>\r\n              {message}\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n              <label htmlFor=\"description\" className=\"form-label\">Descrição</label>\r\n              <input type=\"text\" className={`form-control ${error.description ? 'is-invalid' : ''}`} id=\"description\" maxLength=\"255\" \r\n                value={bus.description || ''}\r\n                onChange={e => {\r\n                  setBus({ ...bus,\r\n                    description: e.target.value\r\n                  })\r\n                }}/>\r\n\r\n              <div id=\"validationName\" \r\n                className=\"invalid-feedback\" \r\n                style={error.description ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.description}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-2\">\r\n              <label htmlFor=\"layout\" className=\"form-label\">Layout</label>\r\n              <br />\r\n              <button type=\"button\" \r\n                      className=\"btn btn-primary\"\r\n                      onClick={handleAddSeat}>\r\n                Adicionar Poltrona\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"col-lg-6 col-xl-4\">\r\n              <div className=\"row\">\r\n              <label htmlFor=\"layout\" className=\"form-label\">Informe o número das poltronas</label>\r\n                {Array.from({length: seats}, (i, j) => {\r\n                  return (\r\n                    <div key={j} className=\"col-3 mb-1\">\r\n                      <input type=\"number\" className='form-control' maxLength='2'\r\n                              value={bus.layout.seats[j] || ''}\r\n                              onChange={e => {\r\n                                let seatsAux = bus.layout.seats\r\n                                seatsAux[j] = parseInt(e.target.value)\r\n                                setBus({ ...bus,\r\n                                  layout: {seats: seatsAux}\r\n                                })\r\n                              }}/>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n\r\n          <div className=\"text-center d-grid gap-2\">\r\n            <button type=\"button\" \r\n                    className=\"btn btn-primary\"\r\n                    onClick={handleSave}\r\n                    disabled={loadingSave}>\r\n              <span className=\"spinner-border spinner-border-sm mx-1\" \r\n                    role=\"status\" \r\n                    aria-hidden=\"true\" \r\n                    style={loadingSave ? { display: 'inline-block'} : { display : 'none' }}>\r\n              </span>\r\n              Salvar\r\n            </button>\r\n\r\n            <button type=\"button\" \r\n                    className=\"btn btn-primary\"\r\n                    style={id !== 'novo' ? { display: 'inline-block'} : { display : 'none' }}\r\n                    onClick={handleDestroy}\r\n                    disabled={loadingDestroy}>\r\n              <span className=\"spinner-border spinner-border-sm mx-1\" \r\n                    role=\"status\" \r\n                    aria-hidden=\"true\" \r\n                    style={loadingDestroy ? { display: 'inline-block'} : { display : 'none' }}>\r\n              </span>\r\n              Excluir\r\n            </button>\r\n\r\n            <button type=\"button\" \r\n                    className=\"btn btn-warning text-white mb-4\"\r\n                    onClick={() => {\r\n                      history.push('/onibus')\r\n                    }}>\r\n              Voltar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Bus\r\n"],"sourceRoot":""}