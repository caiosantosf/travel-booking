{"version":3,"sources":["components/user/Login.js","assets/logo.png","config/api.js","config/handleErrors.js"],"names":["Login","props","useState","auth","setAuth","error","setError","loading","setLoading","message","setMessage","admin","match","url","exit","token","localStorage","getItem","returnTo","history","useHistory","useEffect","removeItem","push","setItem","type","getUserType","handleLogin","a","api","post","res","data","companyName","companyPhone","finishLogin","errorHandled","errorApi","general","className","src","logo","alt","role","style","display","htmlFor","cpf","id","maxLength","value","onChange","e","key","target","test","password","to","onClick","disabled","apiUrl","process","axios","create","baseURL","apiCep","cep","get","hasOwnProperty","response","forbidden","status","toString"],"mappings":"4MAmKeA,UA5Jf,SAAeC,GACb,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAA4B,WAApBV,EAAMW,MAAMC,IACpBC,EAA2B,UAApBb,EAAMW,MAAMC,IACnBE,EAAQC,aAAaC,QAAQ,SAC7BC,EAAWF,aAAaC,QAAQ,MAElCE,EAAUC,cAEdC,qBAAU,WACJP,IACFE,aAAaM,WAAW,SACxBH,EAAQI,KAAK,QAEd,CAACT,EAAMK,IAEVE,qBAAU,WACR,GAAIN,EACF,GAAIG,EACFF,aAAaQ,QAAQ,KAAM,IAC3BL,EAAQI,KAAKL,OACR,CACL,IAAMO,EAAOC,cAEA,UAATD,EACFN,EAAQI,KAAK,kBAEA,YAATE,GACFN,EAAQI,KAAK,QAKpB,CAACR,EAAOI,EAASD,IAEpB,IAAMS,EAAW,uCAAG,sCAAAC,EAAA,sEAEhBpB,GAAW,GACXF,EAAS,IAHO,SAIEuB,IAAIC,KAAJ,uBAAyBnB,EAAQ,QAAU,IAAMR,GAJnD,OAIV4B,EAJU,SAK6BA,EAAIC,KAAzCjB,EALQ,EAKRA,MAAOkB,EALC,EAKDA,YAAaC,EALZ,EAKYA,aAC5BC,EAAYpB,EAAOkB,EAAaC,GANhB,mDAQVE,EAAeC,YAAS,EAAD,KACZC,QACf5B,EAAW0B,EAAa/B,OAExBC,EAAS8B,EAAa/B,OAGxBG,GAAW,GAfK,0DAAH,qDAmBX2B,EAAc,SAACpB,EAAOkB,EAAaC,GACvClB,aAAaQ,QAAQ,QAAST,GAC9BC,aAAaQ,QAAQ,cAAeS,GACpCjB,aAAaQ,QAAQ,eAAgBU,GACrC1B,GAAW,IAGb,OACE,qBAAK+B,UAAU,4BAAf,SACE,iCACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,iBAAiBC,IAAMC,IAAOC,IAAI,SACjD,uDAGF,sBAAKH,UAAU,OAAf,UAEE,qBAAKA,UAAU,iCAAiCI,KAAK,QAChDC,MAAOnC,EAAU,CAAEoC,QAAS,SAAW,CAAEA,QAAU,QADxD,SAEGpC,IAGH,uBAAOqC,QAAQ,MAAMP,UAAU,aAA/B,iBAEA,uBAAOd,KAAK,OACLc,UAAS,uBAAkBlC,EAAM0C,IAAM,aAAe,IACtDC,GAAG,MACHC,UAAU,KACVC,MAAO/C,EAAK4C,KAAO,GACnBI,SAAU,SAAAC,GACT,IACMC,EAAMD,EAAEE,OAAOJ,OAET,KAARG,GAHO,aAGUE,KAAKF,KACxBjD,EAAQ,2BAAKD,GAAN,IAAY4C,IAAKM,QAKlC,qBAAKL,GAAG,gBACHT,UAAU,mBACVK,MAAOvC,EAAM0C,IAAM,CAAEF,QAAS,UAAa,CAAEA,QAAS,QAF3D,SAGMxC,EAAM0C,SAId,sBAAKR,UAAU,OAAf,UACE,uBAAOO,QAAQ,WAAWP,UAAU,aAApC,mBAEA,uBAAOd,KAAK,WACLc,UAAS,uBAAkBlC,EAAMmD,SAAW,aAAe,IAC3DR,GAAG,WACHC,UAAU,IACVE,SAAU,SAAAC,GACThD,EAAQ,2BAAKD,GAAN,IACLqD,SAAUJ,EAAEE,OAAOJ,YAK7B,qBAAKF,GAAG,qBACHT,UAAU,mBACVK,MAAOvC,EAAMmD,SAAW,CAAEX,QAAS,UAAa,CAAEA,QAAS,QAFhE,SAGGxC,EAAMmD,cAIX,qBAAKjB,UAAU,OAAf,SACE,cAAC,IAAD,CAAMkB,GAAG,wBAAT,mCAGF,sBAAKlB,UAAU,2BAAf,UACE,yBAAQd,KAAK,SACLc,UAAU,kBACVmB,QAAS/B,EACTgC,SAAUpD,EAHlB,UAIE,sBAAMgC,UAAU,wCACVI,KAAK,SACL,cAAY,OACZC,MAAOrC,EAAU,CAAEsC,QAAS,gBAAkB,CAAEA,QAAU,UAPlE,YAYA,wBAAQpB,KAAK,SACLc,UAAU,6BACVK,MAAOjC,EAAQ,CAAEkC,QAAS,QAAW,CAAEA,QAAS,gBAChDa,QAAS,WACPvC,EAAQI,KAAK,cAJvB,iC,gCCrJK,QAA0B,kC,gCCAzC,2HAEMqC,EAASC,6BAEThC,EAAMiC,IAAMC,OAAO,CACvBC,QAASJ,IAGLK,EAAS,SAAAC,GAAG,OAAKJ,IAAMK,IAAN,mCAAsCD,EAAtC,a,gCCRvB,sCAAM7B,EAAW,SAAChC,GAChB,GAAIA,EAAM+D,eAAe,aAAe/D,EAAMgE,SAAU,CAEtD,IAAIC,GAAY,EAOhB,OALEA,KADEjE,EAAMgE,SAASD,eAAe,YAAa/D,EAAMgE,SAASE,SACtB,MAA1BlE,EAAMgE,SAASE,OAKzBlE,EAAMgE,SAASD,eAAe,SAAW/D,EAAMgE,SAASrC,KACtD3B,EAAMgE,SAASrC,KAAKoC,eAAe,YAAc/D,EAAMgE,SAASrC,KAAKvB,QAChE,CAAE6B,SAAS,EAAMjC,MAAOA,EAAMgE,SAASrC,KAAKvB,QAAS6D,aAErD,CAAEhC,SAAS,EAAOjC,MAAOA,EAAMgE,SAASrC,KAAMsC,aAGhD,CAAEhC,SAAS,EAAMjC,MAAO,oDAAqDiE,aAGtF,MAAyB,yBAArBjE,EAAMmE,WACD,CAAElC,SAAS,EAAMjC,MAAM,oDAAkDiE,WAAW,GAEpF,CAAEhC,SAAS,EAAMjC,MAAM,oDAAqDiE,WAAW","file":"static/js/24.62958ff1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { api } from '../../config/api'\r\nimport logo from '../../assets/logo.png'\r\nimport { getUserType } from '../../config/security'\r\nimport { errorApi } from '../../config/handleErrors'\r\n\r\nfunction Login(props) {\r\n  const [auth, setAuth] = useState({})\r\n  const [error, setError] = useState({})\r\n  const [loading, setLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n\r\n  const admin = props.match.url === '/admin' ? true : false\r\n  const exit = props.match.url === '/sair' ? true : false\r\n  const token = localStorage.getItem('token')\r\n  const returnTo = localStorage.getItem('to')\r\n    \r\n  let history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (exit) {\r\n      localStorage.removeItem('token')  \r\n      history.push('/')\r\n    }\r\n  }, [exit, history])\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      if (returnTo) {\r\n        localStorage.setItem('to', '')\r\n        history.push(returnTo)\r\n      } else {\r\n        const type = getUserType()\r\n\r\n        if (type === 'admin') {\r\n          history.push('/admin-inicial')\r\n        } else {\r\n          if (type === 'regular') {\r\n            history.push('/')\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [token, history, returnTo])\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError({})\r\n      const res = await api.post(`/users/login/${admin ? 'admin' : ''}`, auth)\r\n      const { token, companyName, companyPhone } = res.data\r\n      finishLogin(token, companyName, companyPhone)\r\n    } catch (error) {\r\n      const errorHandled = errorApi(error)\r\n      if (errorHandled.general) {\r\n        setMessage(errorHandled.error)\r\n      } else {\r\n        setError(errorHandled.error)\r\n      }\r\n\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const finishLogin = (token, companyName, companyPhone) => {\r\n    localStorage.setItem('token', token)\r\n    localStorage.setItem('companyName', companyName)\r\n    localStorage.setItem('companyPhone', companyPhone)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container container-login\">\r\n      <form>\r\n        <div className=\"text-center mb-3\">\r\n          <img className=\"mb-3 img-login\" src={ logo } alt=\"Logo\" />\r\n          <h5>Sistema de reserva</h5>\r\n        </div>\r\n\r\n        <div className=\"mb-2\">\r\n\r\n          <div className='alert text-center alert-danger' role=\"alert\"\r\n               style={message ? { display: 'block'} : { display : 'none' }}>\r\n            {message}\r\n          </div>\r\n\r\n          <label htmlFor=\"cpf\" className=\"form-label\">CPF</label>\r\n\r\n          <input type=\"text\" \r\n                 className={`form-control ${error.cpf ? 'is-invalid' : ''}`}\r\n                 id=\"cpf\" \r\n                 maxLength=\"11\" \r\n                 value={auth.cpf || ''} \r\n                 onChange={e => {\r\n                  const re = /^[0-9\\b]+$/\r\n                  const key = e.target.value\r\n      \r\n                  if (key === '' || re.test(key)) {\r\n                    setAuth({ ...auth, cpf: key })\r\n                  }\r\n                 }}\r\n          />\r\n\r\n          <div id=\"validationCpf\" \r\n               className=\"invalid-feedback\" \r\n               style={error.cpf ? { display: 'inline' } : { display: 'none' }}>\r\n               {error.cpf}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mb-2\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Senha</label>\r\n\r\n          <input type=\"password\" \r\n                 className={`form-control ${error.password ? 'is-invalid' : ''}`}\r\n                 id=\"password\" \r\n                 maxLength=\"8\" \r\n                 onChange={e => {\r\n                  setAuth({ ...auth,\r\n                    password: e.target.value\r\n                  })\r\n                 }}\r\n          />\r\n\r\n          <div id=\"validationPassword\" \r\n               className=\"invalid-feedback\" \r\n               style={error.password ? { display: 'inline' } : { display: 'none' }}>\r\n            {error.password}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <Link to=\"/email-redefine-senha\">Esqueci minha senha</Link>\r\n        </div>\r\n\r\n        <div className=\"text-center d-grid gap-2\">\r\n          <button type=\"button\" \r\n                  className=\"btn btn-primary\"\r\n                  onClick={handleLogin}\r\n                  disabled={loading}>\r\n            <span className=\"spinner-border spinner-border-sm mx-1\" \r\n                  role=\"status\" \r\n                  aria-hidden=\"true\" \r\n                  style={loading ? { display: 'inline-block'} : { display : 'none' }}>\r\n            </span>\r\n            Entrar\r\n          </button>\r\n\r\n          <button type=\"button\" \r\n                  className=\"btn btn-warning text-white\" \r\n                  style={admin ? { display: 'none' } : { display: 'inline-block' }}\r\n                  onClick={() => {\r\n                    history.push('/registro')\r\n                  }}>\r\n            Cadastrar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","export default __webpack_public_path__ + \"static/media/logo.47d929e8.png\";","import axios from 'axios'\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL\r\n\r\nconst api = axios.create({\r\n  baseURL: apiUrl\r\n})\r\n\r\nconst apiCep = cep => (axios.get(`https://viacep.com.br/ws/${cep}/json/`))\r\n\r\nexport { api, apiCep, apiUrl }","const errorApi = (error) => {\r\n  if (error.hasOwnProperty('response') && error.response) {\r\n\r\n    let forbidden = false\r\n    if (error.response.hasOwnProperty('status') && error.response.status) {\r\n      forbidden = error.response.status === 401 ? true : false\r\n    } else {\r\n      forbidden = false\r\n    }\r\n\r\n    if (error.response.hasOwnProperty('data') && error.response.data) {\r\n      if (error.response.data.hasOwnProperty('message') && error.response.data.message) {\r\n        return { general: true, error: error.response.data.message, forbidden }\r\n      } else {\r\n        return { general: false, error: error.response.data, forbidden }\r\n      }\r\n    } else {\r\n      return { general: true, error: 'Algo errado aconteceu, tente novamente mais tarde', forbidden }\r\n    }\r\n  } else {\r\n    if (error.toString() === 'Error: Network Error') {\r\n      return { general: true, error:'Erro de rede, o banco de dados está fora do ar', forbidden: false }\r\n    } else {\r\n      return { general: true, error:'Algo errado aconteceu, tente novamente mais tarde', forbidden: false }\r\n    }\r\n  }\r\n}\r\n\r\nexport { errorApi }"],"sourceRoot":""}