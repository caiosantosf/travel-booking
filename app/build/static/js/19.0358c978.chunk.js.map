{"version":3,"sources":["components/travel/Passenger.js"],"names":["Bus","props","useState","loadingSave","setLoadingSave","loadingDestroy","setLoadingDestroy","passenger","setPassenger","error","setError","message","setMessage","history","useHistory","id","match","params","config","headers","localStorage","getItem","useEffect","a","api","get","res","data","errorHandled","errorApi","forbidden","push","general","fetchData","handleSave","handleDestroy","delete","Fragment","className","role","style","display","htmlFor","type","description","maxLength","value","onChange","e","target","onClick","disabled","aria-hidden"],"mappings":"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","file":"static/js/19.0358c978.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport NavHeader from '../nav/NavHeader'\r\nimport Sidebar from '../nav/Sidebar'\r\nimport { api } from '../../config/api'\r\nimport { errorApi } from '../../config/handleErrors'\r\n\r\nfunction Bus(props) {\r\n  const [loadingSave, setLoadingSave] = useState(false)\r\n  const [loadingDestroy, setLoadingDestroy] = useState(false)\r\n  const [passenger, setPassenger] = useState({})\r\n  const [error, setError] = useState({})\r\n  const [message, setMessage] = useState('')\r\n  \r\n  let history = useHistory()\r\n\r\n  const { id } = props.match.params\r\n\r\n  const config = { headers :{\r\n    'x-access-token' : localStorage.getItem('token')\r\n  }}\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await api.get(`/reservation/${id}`, \r\n          { headers :{\r\n            'x-access-token' : localStorage.getItem('token')\r\n          }})\r\n        setPassenger(res.data)\r\n      } catch (error) {\r\n        const errorHandled = errorApi(error)\r\n        if (errorHandled.forbidden) {\r\n          history.push('/')\r\n        } else {\r\n          if (errorHandled.general) {\r\n            setMessage(errorHandled.error)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (id !== 'novo') {\r\n      fetchData()\r\n    }\r\n  }, [id, history])\r\n\r\n  const handleSave = async () => {\r\n    setLoadingSave(true)\r\n    setError({})\r\n    \r\n    try {\r\n      /*id !== 'novo' \r\n        ? await api.put(`/buses/${id}`, bus, config) \r\n        : await api.post('/buses', bus, config)*/\r\n\r\n      history.push('/onibus')\r\n    } catch (error) {\r\n      setLoadingSave(false)\r\n\r\n      const errorHandled = errorApi(error)\r\n      if (errorHandled.general) {\r\n        setMessage(errorHandled.error)\r\n      } else {\r\n        setError(errorHandled.error)\r\n      }\r\n    }    \r\n  }\r\n\r\n  const handleDestroy = async () => {\r\n    setLoadingDestroy(true)\r\n    \r\n    try {\r\n      await api.delete(`/buses/${id}`, config)\r\n      history.push('/onibus')\r\n    } catch (error) {\r\n      const errorHandled = errorApi(error)\r\n      if (errorHandled.general) {\r\n        setMessage(errorHandled.error)\r\n      } else {\r\n        setError(errorHandled.error)\r\n      }\r\n    }\r\n\r\n    setLoadingSave(false)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavHeader />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"mt-4 col-md-9 ms-sm-auto col-lg-10 px-md-2\">\r\n          <Sidebar />\r\n\r\n          <h5>Cadastro de ônibus</h5>\r\n\r\n          <form className=\"row g-3 mt-1 mb-4\">\r\n            <div className='alert text-center alert-danger' role=\"alert\"\r\n                 style={message ? { display: 'block'} : { display : 'none' }}>\r\n              {message}\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n              <label htmlFor=\"description\" className=\"form-label\">Descrição</label>\r\n              <input type=\"text\" className={`form-control ${error.description ? 'is-invalid' : ''}`} id=\"description\" maxLength=\"255\" \r\n                value={passenger.description || ''}\r\n                onChange={e => {\r\n                  setPassenger({ ...passenger,\r\n                    description: e.target.value\r\n                  })\r\n                }}/>\r\n\r\n              <div id=\"validationName\" \r\n                className=\"invalid-feedback\" \r\n                style={error.description ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.description}\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"text-center d-grid gap-2\">\r\n            <button type=\"button\" \r\n                    className=\"btn btn-primary\"\r\n                    onClick={handleSave}\r\n                    disabled={loadingSave}>\r\n              <span className=\"spinner-border spinner-border-sm mx-1\" \r\n                    role=\"status\" \r\n                    aria-hidden=\"true\" \r\n                    style={loadingSave ? { display: 'inline-block'} : { display : 'none' }}>\r\n              </span>\r\n              Salvar\r\n            </button>\r\n\r\n            <button type=\"button\" \r\n                    className=\"btn btn-primary\"\r\n                    style={id !== 'novo' ? { display: 'inline-block'} : { display : 'none' }}\r\n                    onClick={handleDestroy}\r\n                    disabled={loadingDestroy}>\r\n              <span className=\"spinner-border spinner-border-sm mx-1\" \r\n                    role=\"status\" \r\n                    aria-hidden=\"true\" \r\n                    style={loadingDestroy ? { display: 'inline-block'} : { display : 'none' }}>\r\n              </span>\r\n              Excluir\r\n            </button>\r\n\r\n            <button type=\"button\" \r\n                    className=\"btn btn-warning text-white mb-4\"\r\n                    onClick={() => {\r\n                      history.push('/onibus')\r\n                    }}>\r\n              Voltar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Bus\r\n"],"sourceRoot":""}