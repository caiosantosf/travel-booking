{"version":3,"sources":["config/api.js","config/handleErrors.js","components/user/ResetPassword.js"],"names":["apiUrl","process","api","axios","create","baseURL","apiCep","cep","get","errorApi","error","hasOwnProperty","response","forbidden","status","data","message","general","toString","ResetPassword","props","useState","password","setPassword","setMessage","loading","setLoading","history","useHistory","handleResetPassword","a","passwordConfirmation","id","match","params","token","location","search","replace","patch","headers","res","errorHandled","push","className","role","style","display","htmlFor","type","maxLength","value","onChange","e","key","target","onClick","disabled","aria-hidden"],"mappings":"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","file":"static/js/26.0538d524.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL\r\n\r\nconst api = axios.create({\r\n  baseURL: apiUrl\r\n})\r\n\r\nconst apiCep = cep => (axios.get(`https://viacep.com.br/ws/${cep}/json/`))\r\n\r\nexport { api, apiCep, apiUrl }","const errorApi = (error) => {\r\n  if (error.hasOwnProperty('response') && error.response) {\r\n\r\n    let forbidden = false\r\n    if (error.response.hasOwnProperty('status') && error.response.status) {\r\n      forbidden = error.response.status === 401 ? true : false\r\n    } else {\r\n      forbidden = false\r\n    }\r\n\r\n    if (error.response.hasOwnProperty('data') && error.response.data) {\r\n      if (error.response.data.hasOwnProperty('message') && error.response.data.message) {\r\n        return { general: true, error: error.response.data.message, forbidden }\r\n      } else {\r\n        return { general: false, error: error.response.data, forbidden }\r\n      }\r\n    } else {\r\n      return { general: true, error: 'Algo errado aconteceu, tente novamente mais tarde', forbidden }\r\n    }\r\n  } else {\r\n    if (error.toString() === 'Error: Network Error') {\r\n      return { general: true, error:'Erro de rede, o banco de dados está fora do ar', forbidden: false }\r\n    } else {\r\n      return { general: true, error:'Algo errado aconteceu, tente novamente mais tarde', forbidden: false }\r\n    }\r\n  }\r\n}\r\n\r\nexport { errorApi }","import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { api } from '../../config/api'\r\nimport { errorApi } from '../../config/handleErrors'\r\n\r\nfunction ResetPassword(props) {\r\n  const [password, setPassword] = useState({})\r\n  const [message, setMessage] = useState({})\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  let history = useHistory()\r\n\r\n  const handleResetPassword = async () => {\r\n    try {\r\n      if (password.password === password.passwordConfirmation) {\r\n        setLoading(true)\r\n        const id = props.match.params.id\r\n        const token = props.location.search.replace('?token=', '')\r\n        const res = await api.patch(`/users/login/resetpassword/${id}`, { 'password' : password.password, 'reset' : true }, \r\n          { headers :{\r\n            'x-access-token' : token\r\n          }})\r\n        setMessage({ ...res.data, error : false })\r\n        setLoading(false)\r\n      } else {\r\n        setMessage({\r\n          message : \"A Senha não bate com a confirmação\",\r\n          error : true\r\n        })\r\n      }\r\n      setPassword({})\r\n    } catch (error) {\r\n      const errorHandled = errorApi(error)\r\n      if (errorHandled.forbidden) {\r\n        history.push('/')\r\n      } else {\r\n        setMessage({ ...errorHandled.error, error: true })\r\n      }\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container container-login\">\r\n\r\n      <div className={`alert text-center ${message.error ? 'alert-danger' : 'alert-warning'}`}\r\n           role=\"alert\"\r\n           style={message.message ? { display: 'block'} : { display : 'none' }}>\r\n        {message.message || message.password}\r\n      </div>\r\n\r\n      <div className=\"text-center mb-3\">\r\n        <h5>\r\n          Cadastre sua nova senha\r\n        </h5>\r\n      </div>\r\n\r\n      <form>\r\n        <div className=\"mb-2\" >\r\n          <label htmlFor=\"password\" \r\n                 className=\"form-label\">\r\n            Senha\r\n          </label>\r\n          <input  type=\"password\" \r\n                  className='form-control'\r\n                  id=\"password\" \r\n                  maxLength=\"8\"\r\n                  value={password.password || ''}\r\n                  onChange={(e) => {\r\n                    const key = e.target.value\r\n                    setPassword({\r\n                      ...password,\r\n                      password: key\r\n                    })\r\n                  }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-2\" >\r\n          <label htmlFor=\"passwordConfirmation\" \r\n                 className=\"form-label\">\r\n            Confirme a Senha\r\n          </label>\r\n          <input  type=\"password\" \r\n                  className='form-control'\r\n                  id=\"passwordConfirmation\" \r\n                  maxLength=\"8\"\r\n                  value={password.passwordConfirmation || ''}\r\n                  onChange={(e) => {\r\n                    const key = e.target.value\r\n                    setPassword({\r\n                      ...password,\r\n                      passwordConfirmation: key\r\n                    })\r\n                  }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"text-center d-grid gap-2\">\r\n          <button type=\"button\" \r\n                  className=\"btn btn-primary\" \r\n                  onClick={handleResetPassword}\r\n                  disabled={loading}>\r\n            <span className=\"spinner-border spinner-border-sm mx-1\" \r\n                  role=\"status\" \r\n                  aria-hidden=\"true\"\r\n                  style={loading ? { display: 'inline-block'} : { display : 'none' }}>\r\n            </span>\r\n            Enviar\r\n          </button>\r\n          <button type=\"button\" \r\n                  className=\"btn btn-warning text-white\"\r\n                  onClick={() => {\r\n                    history.push('/')\r\n                  }}>\r\n            Voltar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPassword\r\n"],"sourceRoot":""}