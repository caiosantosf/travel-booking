{"version":3,"sources":["components/travel/Payment.js"],"names":["Payment","props","useState","loadingSave","setLoadingSave","loadingDestroy","setLoadingDestroy","error","setError","message","setMessage","payment","setPayment","originalStatus","setOriginalStatus","history","useHistory","id","match","params","name","location","state","config","headers","localStorage","getItem","useEffect","a","api","get","res","data","status","console","log","errorHandled","errorApi","forbidden","push","general","fetchData","handleDestroy","put","active","goBack","handleSave","Fragment","className","role","style","display","includes","htmlFor","value","onChange","e","target","type","onClick","disabled","aria-hidden"],"mappings":"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","file":"static/js/20.abf38c22.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport NavHeader from '../nav/NavHeader'\r\nimport Sidebar from '../nav/Sidebar'\r\nimport { api } from '../../config/api'\r\nimport { errorApi } from '../../config/handleErrors'\r\n\r\nfunction Payment(props) {\r\n  const [loadingSave, setLoadingSave] = useState(false)\r\n  const [loadingDestroy, setLoadingDestroy] = useState(false)\r\n  const [error, setError] = useState({})\r\n  const [message, setMessage] = useState('')\r\n  const [payment, setPayment] = useState('')\r\n  const [originalStatus, setOriginalStatus] = useState('')\r\n\r\n  let history = useHistory()\r\n\r\n  const { id } = props.match.params\r\n  const { name } = props.location.state\r\n\r\n  const config = { headers :{\r\n    'x-access-token' : localStorage.getItem('token')\r\n  }}\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await api.get(`/reservations/${id}`, \r\n          { headers :{\r\n            'x-access-token' : localStorage.getItem('token')\r\n          }})\r\n\r\n        let data = res.data\r\n\r\n        const status = data.status === '1' ? '1' :\r\n                       data.status === '2' ? '2' :\r\n                       data.status === '3' ? '1' :\r\n                       data.status === '4' ? '2' :\r\n                       data.status === '5' ? '1' :\r\n                       data.status === '6' ? '2' : data.status\r\n\r\n        data.status = status\r\n\r\n        setPayment(data)\r\n        setOriginalStatus(res.data.status)\r\n        console.log(res.data)\r\n      } catch (error) {\r\n        const errorHandled = errorApi(error)\r\n        if (errorHandled.forbidden) {\r\n          history.push('/')\r\n        } else {\r\n          if (errorHandled.general) {\r\n            setMessage(errorHandled.error)\r\n          }\r\n        }\r\n      }\r\n    }\r\n      fetchData()\r\n  }, [id, history])\r\n\r\n  const handleDestroy = async () => {\r\n    setLoadingDestroy(true)\r\n\r\n    try {\r\n      await api.put(`/reservations/${id}`, {active: false}, config)\r\n      props.history.goBack()\r\n    } catch (error) {\r\n      const errorHandled = errorApi(error)\r\n      if (errorHandled.general) {\r\n        setMessage(errorHandled.error)\r\n      } else {\r\n        setError(errorHandled.error)\r\n      }\r\n    }\r\n\r\n    setLoadingDestroy(false)\r\n  }\r\n\r\n  const handleSave = async () => {\r\n    setLoadingSave(true)\r\n    setError({})\r\n\r\n    const status = payment.status === '1' && originalStatus === '1' ? '1' :\r\n                   payment.status === '1' && originalStatus === '2' ? '1' :\r\n                   payment.status === '1' && originalStatus === '3' ? '3' :\r\n                   payment.status === '1' && originalStatus === '4' ? '3' :\r\n                   payment.status === '1' && originalStatus === '5' ? '5' :\r\n                   payment.status === '1' && originalStatus === '6' ? '5' :\r\n                   payment.status === '2' && originalStatus === '1' ? '2' :\r\n                   payment.status === '2' && originalStatus === '2' ? '2' :\r\n                   payment.status === '2' && originalStatus === '3' ? '4' :\r\n                   payment.status === '2' && originalStatus === '4' ? '4' :\r\n                   payment.status === '2' && originalStatus === '5' ? '6' :\r\n                   payment.status === '2' && originalStatus === '6' ? '6' : ''\r\n    \r\n    try {\r\n      await api.put(`/reservations/${id}`, {status}, config) \r\n      props.history.goBack()\r\n    } catch (error) {\r\n      setLoadingSave(false)\r\n\r\n      const errorHandled = errorApi(error)\r\n      if (errorHandled.general) {\r\n        setMessage(errorHandled.error)\r\n      } else {\r\n        setError(errorHandled.error)\r\n      }\r\n    }    \r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavHeader />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"mt-4 col-md-9 ms-sm-auto col-lg-10 px-md-2\">\r\n          <Sidebar />\r\n\r\n          <h5>Alteração do Status de Pagamento</h5>\r\n\r\n          <div className='alert text-center alert-danger' role=\"alert\"\r\n                style={message ? { display: 'block'} : { display : 'none' }}>\r\n            {message}\r\n          </div>\r\n\r\n          <h6>{name}</h6>\r\n\r\n          <form className={`row g-3 mt-1 mb-4`} style={['1', '2', '3', '4', '5', '6'].includes(originalStatus) ? { display: 'block'} : { display : 'none' }}>\r\n            <div className=\"col-lg-3\">\r\n              <label htmlFor=\"status\" className=\"form-label\">Status</label>\r\n              <select className={`form-select ${error.status ? 'is-invalid' : ''}`} id=\"status\"\r\n                value={payment.status || ''}\r\n                onChange={e => {\r\n                  setPayment({ ...payment,\r\n                    status: e.target.value\r\n                  })\r\n                }}>\r\n                <option value={'1'}>Esperando</option>\r\n                <option value={'2'}>Recebido</option>\r\n              </select>\r\n\r\n              <div id=\"validationStatus\" \r\n                className=\"invalid-feedback\" \r\n                style={error.status ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.status}\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          <div className={`text-center d-grid gap-2`}>\r\n            <button type=\"button\" \r\n                    className={`btn btn-primary`}\r\n                    onClick={handleSave}\r\n                    disabled={loadingSave}\r\n                    style={['1', '2', '3', '4', '5', '6'].includes(originalStatus) ? { display: 'block'} : { display : 'none' }}>\r\n              <span className=\"spinner-border spinner-border-sm mx-1\" \r\n                    role=\"status\" \r\n                    aria-hidden=\"true\" \r\n                    style={loadingSave ? { display: 'inline-block'} : { display : 'none' }}>\r\n              </span>\r\n              Salvar\r\n            </button>\r\n\r\n            <button type=\"button\" \r\n                    className=\"btn btn-primary\"\r\n                    onClick={handleDestroy}\r\n                    disabled={loadingSave}>\r\n              <span className=\"spinner-border spinner-border-sm mx-1\" \r\n                    role=\"status\" \r\n                    aria-hidden=\"true\" \r\n                    style={loadingDestroy ? { display: 'inline-block'} : { display : 'none' }}>\r\n              </span>\r\n              Excluir\r\n            </button>\r\n\r\n            <button type=\"button\" \r\n                    className=\"btn btn-warning text-white mb-4\"\r\n                    onClick={() => {\r\n                      props.history.goBack()\r\n                    }}>\r\n              Voltar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Payment\r\n"],"sourceRoot":""}