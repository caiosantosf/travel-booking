[{"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\index.js":"1","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\Routes.js":"2","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\user\\EmailResetPassword.js":"3","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\user\\Login.js":"4","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\user\\UserHome.js":"5","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\user\\ResetPassword.js":"6","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\user\\Users.js":"7","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\user\\User.js":"8","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\bus\\Bus.js":"9","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\bus\\Buses.js":"10","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\travel\\Travels.js":"11","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\admin\\AdminHome.js":"12","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\config\\api.js":"13","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\nav\\NavHeader.js":"14","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\nav\\Sidebar.js":"15","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\travel\\Travel.js":"16","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\config\\transformations.js":"17","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\travel\\Value.js":"18","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\travel\\DeparturePlace.js":"19","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\environment\\Forbidden.js":"20","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\config\\security.js":"21","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\reservation\\Reservation.js":"22","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\environment\\ToRegister.js":"23"},{"size":340,"mtime":1611863791419,"results":"24","hashOfConfig":"25"},{"size":3091,"mtime":1612986047429,"results":"26","hashOfConfig":"25"},{"size":2734,"mtime":1611866892198,"results":"27","hashOfConfig":"25"},{"size":4846,"mtime":1612979853173,"results":"28","hashOfConfig":"25"},{"size":6409,"mtime":1612986041281,"results":"29","hashOfConfig":"25"},{"size":3746,"mtime":1611867493988,"results":"30","hashOfConfig":"25"},{"size":4652,"mtime":1612377801930,"results":"31","hashOfConfig":"25"},{"size":18289,"mtime":1612979605350,"results":"32","hashOfConfig":"25"},{"size":6077,"mtime":1612464388075,"results":"33","hashOfConfig":"25"},{"size":4334,"mtime":1612467341730,"results":"34","hashOfConfig":"25"},{"size":4539,"mtime":1612377793463,"results":"35","hashOfConfig":"25"},{"size":609,"mtime":1612387112734,"results":"36","hashOfConfig":"25"},{"size":233,"mtime":1612541980860,"results":"37","hashOfConfig":"25"},{"size":768,"mtime":1611867539319,"results":"38","hashOfConfig":"25"},{"size":1707,"mtime":1612619546618,"results":"39","hashOfConfig":"25"},{"size":13130,"mtime":1612467366224,"results":"40","hashOfConfig":"25"},{"size":724,"mtime":1612186173646,"results":"41","hashOfConfig":"25"},{"size":8477,"mtime":1612618760728,"results":"42","hashOfConfig":"25"},{"size":13071,"mtime":1612620730763,"results":"43","hashOfConfig":"25"},{"size":854,"mtime":1612962982424,"results":"44","hashOfConfig":"25"},{"size":446,"mtime":1612987899797,"results":"45","hashOfConfig":"25"},{"size":6014,"mtime":1612988036867,"results":"46","hashOfConfig":"25"},{"size":1238,"mtime":1612979897610,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"14h3t2d",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\index.js",[],["98","99"],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\Routes.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\user\\EmailResetPassword.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\user\\Login.js",["100"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\"\r\nimport { api } from '../../config/api'\r\nimport logo from '../../assets/logo.png'\r\nimport { getUserType } from '../../config/security'\r\n\r\nfunction Login(props) {\r\n  const [auth, setAuth] = useState({})\r\n  const [error, setError] = useState({})\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const admin = props.match.url === '/admin' ? true : false\r\n  const exit = props.match.url === '/sair' ? true : false\r\n  const token = localStorage.getItem('token')\r\n  const returnTo = localStorage.getItem('to')\r\n    \r\n  let history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (exit) {\r\n      localStorage.removeItem('token')  \r\n      history.push('/')\r\n    }\r\n  }, [exit, history])\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (token) {\r\n\r\n          if (returnTo) {\r\n            localStorage.setItem('to', '')\r\n            history.push(returnTo)\r\n          } else {\r\n            const type = getUserType()\r\n\r\n            if (type === 'admin') {\r\n              history.push('/admin-inicial')\r\n            } else {\r\n              if (type === 'regular') {\r\n                history.push('/')\r\n              }\r\n            } \r\n          }\r\n        }\r\n      } catch (error) {}\r\n    }\r\n    fetchData()\r\n  }, [token, history, returnTo])\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError({})\r\n      const res = await api.post(`/users/login/${admin ? 'admin' : ''}`, auth)\r\n      const { type, token } = res.data\r\n      finishLogin(type, token)\r\n    } catch (err) {\r\n      if ((err.hasOwnProperty('response')) && (err.response)) {\r\n        setError(err.response.data)\r\n      } else {\r\n        alert('Você está sem internet ou o nosso servidor está fora do ar')\r\n      }\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const finishLogin = (type, token) => {\r\n    localStorage.setItem('token', token)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container container-login\">\r\n      <form>\r\n        <div className=\"text-center mb-3\">\r\n          <img className=\"mb-3 img-login\" src={ logo } alt=\"Logo\" />\r\n          <h5>Sistema de reserva</h5>\r\n        </div>\r\n\r\n        <div className=\"mb-2\">\r\n          <label htmlFor=\"cpf\" className=\"form-label\">CPF</label>\r\n\r\n          <input type=\"text\" \r\n                 className={`form-control ${error.cpf ? 'is-invalid' : ''}`}\r\n                 id=\"cpf\" \r\n                 maxLength=\"11\" \r\n                 value={auth.cpf || ''} \r\n                 onChange={e => {\r\n                  const re = /^[0-9\\b]+$/\r\n                  const key = e.target.value\r\n      \r\n                  if (key === '' || re.test(key)) {\r\n                    setAuth({ ...auth, cpf: key })\r\n                  }\r\n                 }}\r\n          />\r\n\r\n          <div id=\"validationCpf\" \r\n               className=\"invalid-feedback\" \r\n               style={error.cpf ? { display: 'inline' } : { display: 'none' }}>\r\n               {error.cpf}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mb-2\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Senha</label>\r\n\r\n          <input type=\"password\" \r\n                 className={`form-control ${error.password ? 'is-invalid' : ''}`}\r\n                 id=\"password\" \r\n                 maxLength=\"8\" \r\n                 onChange={e => {\r\n                  setAuth({ ...auth,\r\n                    password: e.target.value\r\n                  })\r\n                 }}\r\n          />\r\n\r\n          <div id=\"validationPassword\" \r\n               className=\"invalid-feedback\" \r\n               style={error.password ? { display: 'inline' } : { display: 'none' }}>\r\n            {error.password}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <Link to=\"/email-redefine-senha\">Esqueci minha senha</Link>\r\n        </div>\r\n\r\n        <div className=\"text-center d-grid gap-2\">\r\n          <button type=\"button\" \r\n                  className=\"btn btn-primary\"\r\n                  onClick={handleLogin}\r\n                  disabled={loading}>\r\n            <span className=\"spinner-border spinner-border-sm mx-1\" \r\n                  role=\"status\" \r\n                  aria-hidden=\"true\" \r\n                  style={loading ? { display: 'inline-block'} : { display : 'none' }}>\r\n            </span>\r\n            Entrar\r\n          </button>\r\n\r\n          <button type=\"button\" \r\n                  className=\"btn btn-warning text-white\" \r\n                  style={admin ? { display: 'none' } : { display: 'inline-block' }}\r\n                  onClick={() => {\r\n                    history.push('/registro')\r\n                  }}>\r\n            Cadastrar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\user\\UserHome.js",["101"],"import React, { useState, useEffect} from 'react'\r\nimport NavHeader from '../nav/NavHeader'\r\nimport Sidebar from '../nav/Sidebar'\r\nimport { CalendarCheck } from 'react-bootstrap-icons'\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { api, apiUrl } from '../../config/api'\r\nimport { dateTimeBrazil } from '../../config/transformations'\r\n\r\nfunction UserHome({ userType }) {\r\n  const [travels, setTravels] = useState([])\r\n\r\n  //let history = useHistory()\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await api.get('/travels', \r\n          { headers :{\r\n            'openTravels': true, \r\n            'x-access-token' : localStorage.getItem('token')\r\n          }})\r\n        if (res.status === 200) {\r\n          setTravels(res.data)\r\n        } else {\r\n          setTravels(false)\r\n        }\r\n      } catch (error) {  \r\n        //fala que houve um erro\r\n      }\r\n    }\r\n    fetchData()\r\n  })\r\n\r\n  const noTravels = <h1>No momento não temos viagens em aberto!</h1>\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavHeader />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n                    \r\n          <div className=\"mt-4 col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n            <Sidebar pageType={userType}/>\r\n\r\n            {!travels ? noTravels : ''}\r\n\r\n            <div className=\"row row-cols-1 row-cols-md-2 row-cols-xl-3 row-cols-xxl-4 g-3\">\r\n\r\n              {travels.map(travel => {\r\n                const { id, description, destination, departurePlaces, values, imageName } = travel\r\n                const onlyOneValue = values.length === 1 ? true : false\r\n\r\n                return (\r\n                  <div className=\"col\">\r\n                    <Link key={id} className=\"card-link\" to={`/reserva/${id}`}>\r\n                      <div className=\"card shadow-sm bg-light\">\r\n                        <img src={`${apiUrl}uploads/${imageName}`} className=\"card-img-top center-cropped\" alt={destination} />\r\n                        <div className=\"card-body\">\r\n                          <h5>{destination}</h5>\r\n                          <p className=\"card-text\">\r\n                            {description}\r\n                            <p className=\"text-danger\">* Últimas Poltronas!</p>\r\n                          </p>\r\n                          \r\n                          <hr />\r\n                            {departurePlaces.map((place, i) => {\r\n                              const { id, departureDate, returnDate, city } = place\r\n\r\n                              return (\r\n                                <div key={id}>\r\n                                  <span className={`d-block ${i ? 'mt-2' : ''}`} >{`Saída de ${city}`}</span>\r\n                                  <span><CalendarCheck />{` ${dateTimeBrazil(departureDate)} - ${dateTimeBrazil(returnDate)}`}</span>\r\n                                </div>\r\n                              )\r\n                            })}\r\n                          <hr />\r\n                          <div >\r\n                            {values.map((val, i) => {\r\n                              const { value, onlyDepartureValue, onlyReturnValue, initialAge, finalAge, lapChild } = val\r\n                              \r\n                              return (\r\n                                <div className={i ? 'mt-2' : ''}>\r\n                                  {\r\n                                    onlyOneValue ?\r\n                                      ''\r\n                                    :\r\n                                      lapChild ?\r\n                                        'Criança de Colo'\r\n                                      :\r\n                                        finalAge === 99 ?\r\n                                          `Acima de ${initialAge} anos`\r\n                                        :\r\n                                          `Até ${finalAge} anos`\r\n                                  }\r\n                                  <div className=\"d-flex\">\r\n                                    <div className=\"badge bg-custom-primary fs-5\">\r\n                                      { \r\n                                        `R$ ${value.replace(\".00\",\"\").replace(\".\",\",\")}`\r\n                                      }\r\n                                    </div>\r\n\r\n                                    <div className=\"ms-1 badge bg-custom-secondary price-secondary\"\r\n                                         style={onlyDepartureValue > 0 ? { display: 'inline' } : { display: 'none' }}>\r\n\r\n                                      <span className=\"d-block fs-7 text-start\">Só Ida </span>\r\n                                      <span className=\"d-block fs-6\">\r\n                                      { Number.isInteger(onlyDepartureValue) ?\r\n                                          `R$ ${onlyDepartureValue.replace(\".\",\",\")}`\r\n                                        :\r\n                                          `R$ ${onlyDepartureValue.replace(\".00\",\"\")}`\r\n                                      }\r\n                                      </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"ms-1 badge bg-custom-secondary\"\r\n                                         style={onlyReturnValue > 0 ? { display: 'inline' } : { display: 'none' }}>\r\n\r\n                                      <span className=\"d-block fs-7 text-start\">Só Volta</span>\r\n                                      <span className=\"d-block fs-6\">\r\n                                      { Number.isInteger(onlyReturnValue) ?\r\n                                          `R$ ${onlyReturnValue.replace(\".\",\",\")}`\r\n                                        :\r\n                                          `R$ ${onlyReturnValue.replace(\".00\",\"\")}`\r\n                                      }\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              )\r\n                            })}                          \r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default UserHome\r\n","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\user\\ResetPassword.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\user\\Users.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\user\\User.js",["102"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport { api, apiCep } from '../../config/api'\r\nimport NavHeader from '../nav/NavHeader'\r\nimport Sidebar from '../nav/Sidebar'\r\n\r\nfunction User(props) {\r\n  const [user, setUser] = useState({documentType: 'RG', state: 'AC'})\r\n  const [error, setError] = useState({})\r\n  const [loading, setLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n\r\n  let history = useHistory()\r\n\r\n  const returnTo = localStorage.getItem('to')\r\n\r\n  const { id } = props.match.params\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await api.get(`/users/${id}`, \r\n          { headers :{\r\n            'x-access-token' : localStorage.getItem('token')\r\n          }})\r\n        const { data } = res\r\n        data.birth = data.birth.substr(0, 10)\r\n        delete data.password\r\n        setUser(data)\r\n      } catch (error) {\r\n        setMessage(error.response.data.message)\r\n      }\r\n    }\r\n    if (id) {\r\n      fetchData()\r\n    }\r\n  }, [id])\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError({})\r\n      if (user.password !== user.passwordConfirmation) {\r\n        setError({passwordConfirmation: \"Confirmação de Senha está diferente da Senha\"})\r\n        setLoading(false)\r\n      } else {\r\n        const { passwordConfirmation, ...userData} = user\r\n        const res = await api.post(`/users/`, userData)\r\n        const { type, token } = res.data\r\n        finishLogin(type, token)\r\n      }\r\n    } catch (err) {\r\n      setError(err.response.data)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleCepApi = async () => {\r\n    try {\r\n      const res = await apiCep(user.cep)\r\n      const { data } = res\r\n      if (!data.erro) {\r\n        setUser({ ...user,\r\n                  homeAddress: data.logradouro, \r\n                  complement: data.complement,\r\n                  neighborhood: data.bairro,\r\n                  city: data.localidade,\r\n                  state: data.uf\r\n                })\r\n      }\r\n    } catch (error) {\r\n      setError({cep: \"CEP Inválido!\"})\r\n    }\r\n  }\r\n\r\n  const finishLogin = (type, token) => {\r\n    localStorage.setItem('token', token)\r\n\r\n    setLoading(false)\r\n\r\n    if (returnTo) {\r\n      history.push(returnTo)\r\n      localStorage.setItem('to', '')\r\n    } else {\r\n      if (type === 'admin') {\r\n        history.push('/admin-inicial')\r\n      } else {\r\n        history.push('/')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavHeader />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"mt-4 col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n          <Sidebar pageType={props.userType}/>\r\n\r\n          <h5>{id ? \"Dados do usuário\" : \"Informe seus dados para o cadastro\"}</h5>\r\n\r\n          <form className=\"row g-3 mt-1 mb-4\">\r\n            <div className='alert text-center alert-primary' role=\"alert\"\r\n                style={message ? { display: 'block'} : { display : 'none' }}>\r\n              {message}\r\n            </div>\r\n\r\n            <div className=\"col-lg-6\">\r\n              <label htmlFor=\"name\" className=\"form-label\">Nome</label>\r\n              <input type=\"text\" className={`form-control ${error.name ? 'is-invalid' : ''}`} id=\"name\" maxLength=\"255\" \r\n                disabled={id}\r\n                value={user.name || ''}\r\n                onChange={e => {\r\n                  setUser({ ...user,\r\n                    name: e.target.value\r\n                  })\r\n                }}/>\r\n\r\n              <div id=\"validationName\" \r\n                className=\"invalid-feedback\" \r\n                style={error.name ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.name}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <label htmlFor=\"cpf\" className=\"form-label\">CPF</label>\r\n              <input type=\"text\" className={`form-control ${error.name ? 'is-invalid' : ''}`} id=\"cpf\" maxLength=\"11\" \r\n                disabled={id}\r\n                value={user.cpf || ''}\r\n                onChange={e => {\r\n                  const re = /^[0-9\\b]+$/\r\n                  const key = e.target.value\r\n      \r\n                  if (key === '' || re.test(key)) {\r\n                    setUser({ ...user, cpf: key })\r\n                  }\r\n                }}/>\r\n\r\n              <div id=\"validationCpf\" \r\n                className=\"invalid-feedback\" \r\n                style={error.cpf ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.cpf}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <label htmlFor=\"birth\" className=\"form-label\">Nascimento</label>\r\n              <input type=\"date\" className={`form-control ${error.birth ? 'is-invalid' : ''}`} id=\"birth\" \r\n                disabled={id}\r\n                value={user.birth || ''}\r\n                onChange={e => {\r\n                  setUser({ ...user,\r\n                    birth: e.target.value\r\n                  })\r\n                }}/>\r\n\r\n              <div id=\"validationBirth\" \r\n                className=\"invalid-feedback\" \r\n                style={error.birth ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.birth}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-2\">\r\n            <label htmlFor=\"documentType\" className=\"form-label\">Tipo de Documento</label>\r\n              <select className={`form-select ${error.documentType ? 'is-invalid' : ''}`} id=\"documentType\" \r\n                disabled={id}\r\n                value={user.documentType || ''}\r\n                onChange={e => {\r\n                    setUser({ ...user,\r\n                      documentType: e.target.value\r\n                    })\r\n                  }}>\r\n                <option value=\"RG\">RG</option>\r\n                <option value=\"CNH\">CNH</option>\r\n              </select>\r\n              <div id=\"validationDocumentType\" \r\n                className=\"invalid-feedback\" \r\n                style={error.documentType ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.documentType}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <label htmlFor=\"document\" className=\"form-label\">Documento</label>\r\n              <input type=\"text\" className={`form-control ${error.document ? 'is-invalid' : ''}`} id=\"document\" maxLength=\"14\"\r\n                disabled={id}\r\n                value={user.document || ''}\r\n                onChange={e => {\r\n                  setUser({ ...user,\r\n                    document: e.target.value\r\n                  })\r\n                }}/>\r\n\r\n              <div id=\"validationDocument\" \r\n                className=\"invalid-feedback\" \r\n                style={error.document ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.document}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <label htmlFor=\"phone\" className=\"form-label\">Celular (WhatsApp)</label>\r\n              <input type=\"text\" className={`form-control ${error.phone ? 'is-invalid' : ''}`} id=\"phone\" maxLength=\"11\"\r\n                disabled={id}\r\n                value={user.phone || ''}\r\n                onChange={e => {\r\n                  const re = /^[0-9\\b]+$/\r\n                  const key = e.target.value\r\n      \r\n                  if (key === '' || re.test(key)) {\r\n                    setUser({ ...user, phone: key })\r\n                  }\r\n                }}/>\r\n\r\n              <div id=\"validationPhone\" \r\n                className=\"invalid-feedback\" \r\n                style={error.phone ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.phone}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n              <input type=\"email\" className={`form-control ${error.email ? 'is-invalid' : ''}`} id=\"email\" maxLength=\"255\" \r\n                disabled={id}\r\n                value={user.email || ''}\r\n                onChange={e => {\r\n                  setUser({ ...user,\r\n                    email: e.target.value\r\n                  })\r\n                }}/>\r\n\r\n              <div id=\"validationEmail\" \r\n                className=\"invalid-feedback\" \r\n                style={error.email ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.email}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-2\">\r\n              <label htmlFor=\"cep\" className=\"form-label\">CEP</label>\r\n              <input type=\"text\" className={`form-control ${error.cep ? 'is-invalid' : ''}`} id=\"cep\" maxLength=\"8\"\r\n                disabled={id}\r\n                value={user.cep || ''}\r\n                onChange={e => {\r\n                  const re = /^[0-9\\b]+$/\r\n                  const key = e.target.value\r\n      \r\n                  if (key === '' || re.test(key)) {\r\n                    setUser({ ...user, cep: key })\r\n                  }\r\n                }}\r\n                onBlur={handleCepApi}/>\r\n\r\n              <div id=\"validationCep\" \r\n                className=\"invalid-feedback\" \r\n                style={error.cep ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.cep}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-6\" >\r\n              <label htmlFor=\"homeAddress\" className=\"form-label\">Endereço</label>\r\n              <input type=\"text\" className={`form-control ${error.homeAddress ? 'is-invalid' : ''}`} id=\"homeAddress\" maxLength=\"255\"\r\n                disabled={id}\r\n                value={user.homeAddress || ''}\r\n                onChange={e => {\r\n                  setUser({ ...user,\r\n                    homeAddress: e.target.value\r\n                  })\r\n                }}/>\r\n\r\n              <div id=\"validationHomeAddress\" \r\n                className=\"invalid-feedback\" \r\n                style={error.homeAddress ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.homeAddress}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-1\">\r\n              <label htmlFor=\"addressNumber\" className=\"form-label\">Número</label>\r\n              <input type=\"text\" className={`form-control ${error.addressNumber ? 'is-invalid' : ''}`} id=\"addressNumber\" maxLength=\"5\"\r\n                disabled={id}\r\n                value={user.addressNumber || ''}\r\n                onChange={e => {\r\n                  const re = /^[0-9\\b]+$/\r\n                  const key = e.target.value\r\n      \r\n                  if (key === '' || re.test(key)) {\r\n                    setUser({ ...user, addressNumber: key })\r\n                  }\r\n                }}/>\r\n\r\n              <div id=\"validationNumber\" \r\n                className=\"invalid-feedback\" \r\n                style={error.addressNumber ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.addressNumber}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-3\">\r\n              <label htmlFor=\"complement\" className=\"form-label\">Complemento</label>\r\n              <input type=\"text\" className={`form-control ${error.complement ? 'is-invalid' : ''}`} id=\"complement\" maxLength=\"255\"\r\n                disabled={id}\r\n                value={user.complement || ''}\r\n                onChange={e => {\r\n                  setUser({ ...user,\r\n                    complement: e.target.value\r\n                  })\r\n                }}/>\r\n\r\n              <div id=\"validationComplement\" \r\n                className=\"invalid-feedback\" \r\n                style={error.complement ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.complement}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-6\" >\r\n              <label htmlFor=\"neighborhood\" className=\"form-label\">Bairro</label>\r\n              <input type=\"text\" className={`form-control ${error.neighborhood ? 'is-invalid' : ''}`} id=\"neighborhood\" maxLength=\"255\"\r\n                disabled={id}\r\n                value={user.neighborhood || ''}\r\n                onChange={e => {\r\n                  setUser({ ...user,\r\n                    neighborhood: e.target.value\r\n                  })\r\n                }}/>\r\n\r\n              <div id=\"validationNeighborhood\" \r\n                className=\"invalid-feedback\" \r\n                style={error.neighborhood ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.neighborhood}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-3\">\r\n              <label htmlFor=\"state\" className=\"form-label\">Estado</label>\r\n              <select className={`form-select ${error.state ? 'is-invalid' : ''}`} id=\"state\"\r\n                disabled={id}\r\n                value={user.state || ''}\r\n                onChange={e => {\r\n                  setUser({ ...user,\r\n                    state: e.target.value\r\n                  })\r\n                }}>\r\n                <option value=\"AC\">Acre</option>\r\n                <option value=\"AL\">Alagoas</option>\r\n                <option value=\"AP\">Amapá</option>\r\n                <option value=\"AM\">Amazonas</option>\r\n                <option value=\"BA\">Bahia</option>\r\n                <option value=\"CE\">Ceará</option>\r\n                <option value=\"DF\">Distrito Federal</option>\r\n                <option value=\"ES\">Espírito Santo</option>\r\n                <option value=\"GO\">Goiás</option>\r\n                <option value=\"MA\">Maranhão</option>\r\n                <option value=\"MT\">Mato Grosso</option>\r\n                <option value=\"MS\">Mato Grosso do Sul</option>\r\n                <option value=\"MG\">Minas Gerais</option>\r\n                <option value=\"PA\">Pará</option>\r\n                <option value=\"PB\">Paraíba</option>\r\n                <option value=\"PR\">Paraná</option>\r\n                <option value=\"PE\">Pernambuco</option>\r\n                <option value=\"PI\">Piauí</option>\r\n                <option value=\"RJ\">Rio de Janeiro</option>\r\n                <option value=\"RN\">Rio Grande do Norte</option>\r\n                <option value=\"RS\">Rio Grande do Sul</option>\r\n                <option value=\"RO\">Rondônia</option>\r\n                <option value=\"RR\">Roraima</option>\r\n                <option value=\"SC\">Santa Catarina</option>\r\n                <option value=\"SP\">São Paulo</option>\r\n                <option value=\"SE\">Sergipe</option>\r\n                <option value=\"TO\">Tocantins</option>\r\n              </select>\r\n\r\n              <div id=\"validationState\" \r\n                className=\"invalid-feedback\" \r\n                style={error.state ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.state}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-3\">\r\n              <label htmlFor=\"city\" className=\"form-label\">Cidade</label>\r\n              <input type=\"text\" className={`form-control ${error.city ? 'is-invalid' : ''}`} id=\"city\" maxLength=\"255\"\r\n                disabled={id}\r\n                value={user.city || ''}\r\n                onChange={e => {\r\n                  setUser({ ...user,\r\n                    city: e.target.value\r\n                  })\r\n                }}/>\r\n\r\n              <div id=\"validationCity\" \r\n                className=\"invalid-feedback\" \r\n                style={error.city ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.city}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-4\">\r\n              <label htmlFor=\"password\" className=\"form-label\">Senha</label>\r\n              <input type=\"password\" className={`form-control ${error.password ? 'is-invalid' : ''}`} id=\"password\"\r\n                disabled={id}\r\n                value={user.password || ''}\r\n                onChange={e => {\r\n                  setUser({ ...user,\r\n                    password: e.target.value\r\n                  })\r\n                }}/>\r\n\r\n              <div id=\"validationPassword\" \r\n                className=\"invalid-feedback\" \r\n                style={error.password ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.password}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <label htmlFor=\"passwordConfirmation\" className=\"form-label\">Confirme a Senha</label>\r\n              <input type=\"password\" className={`form-control ${error.passwordConfirmation ? 'is-invalid' : ''}`} id=\"passwordConfirmation\" \r\n                disabled={id}\r\n                value={user.passwordConfirmation || ''}\r\n                onChange={e => {\r\n                  setUser({ ...user,\r\n                    passwordConfirmation: e.target.value\r\n                  })\r\n                }}/>\r\n\r\n              <div id=\"validationPasswordConfirmation\" \r\n                className=\"invalid-feedback\" \r\n                style={error.passwordConfirmation ? { display: 'inline' } : { display: 'none' }}>\r\n                {error.passwordConfirmation}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"text-center d-grid gap-2\">\r\n              <button type=\"button\" \r\n                      className=\"btn btn-primary\"\r\n                      onClick={handleSave}\r\n                      disabled={loading}\r\n                      style={id ? { display: 'none'} : { display : 'inline-block'}}>\r\n                <span className=\"spinner-border spinner-border-sm mx-1\" \r\n                      role=\"status\" \r\n                      aria-hidden=\"true\"\r\n                      style={false ? { display: 'inline-block'} : { display : 'none' }}>\r\n                </span>\r\n                Cadastrar\r\n              </button>\r\n              <button type=\"button\" \r\n                      className=\"btn btn-warning text-white mb-4\"\r\n                      onClick={() => {\r\n                        if (id) {\r\n                          history.push('/usuarios')\r\n                        } else {\r\n                          props.history.goBack()\r\n                        }\r\n                      }}>\r\n                Voltar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default User\r\n","C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\bus\\Bus.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\bus\\Buses.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\travel\\Travels.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\admin\\AdminHome.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\config\\api.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\nav\\NavHeader.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\nav\\Sidebar.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\travel\\Travel.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\config\\transformations.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\travel\\Value.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\travel\\DeparturePlace.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\environment\\Forbidden.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\config\\security.js",[],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\reservation\\Reservation.js",["103","104","105","106","107","108"],"C:\\Users\\PICHAU\\Desktop\\travel-booking\\app\\src\\components\\environment\\ToRegister.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":2,"column":28,"nodeType":"115","messageId":"116","endLine":2,"endColumn":39},{"ruleId":"113","severity":1,"message":"117","line":5,"column":16,"nodeType":"115","messageId":"116","endLine":5,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":2,"column":22,"nodeType":"115","messageId":"116","endLine":2,"endColumn":33},{"ruleId":"113","severity":1,"message":"118","line":7,"column":10,"nodeType":"115","messageId":"116","endLine":7,"endColumn":19},{"ruleId":"113","severity":1,"message":"119","line":11,"column":23,"nodeType":"115","messageId":"116","endLine":11,"endColumn":37},{"ruleId":"113","severity":1,"message":"120","line":12,"column":10,"nodeType":"115","messageId":"116","endLine":12,"endColumn":16},{"ruleId":"113","severity":1,"message":"121","line":13,"column":10,"nodeType":"115","messageId":"116","endLine":13,"endColumn":16},{"ruleId":"113","severity":1,"message":"122","line":17,"column":10,"nodeType":"115","messageId":"116","endLine":17,"endColumn":14},{"ruleId":"113","severity":1,"message":"123","line":17,"column":16,"nodeType":"115","messageId":"116","endLine":17,"endColumn":23},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'getUserId' is defined but never used.","'setLoadingSave' is assigned a value but never used.","'travel' is assigned a value but never used.","'values' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]